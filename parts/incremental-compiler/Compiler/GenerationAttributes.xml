<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GenerationAttributes</name>
    </assembly>
    <members>
        <member name="T:GenerationAttributes.ConstructorFlags">
            <summary>
            <code><![CDATA[
               None = 0,
               Constructor = 1,
               Apply =   Constructor | 1 << 1,
               Copy =    Constructor | 1 << 2,
               Withers = Constructor | 1 << 3,
               Default = Constructor | Copy | Withers,
               All =     Constructor | Apply | Copy | Withers
            ]]></code>
            </summary>
        </member>
        <member name="F:GenerationAttributes.Consts.UNUSED_NAME">
            <summary>
            Dummy name that we should never encounter in compiler defines list.
            Purpose: we want to remove instances of some attributes from compiled code.
            Eg.: We put a [Record] attribute on some class in a project X that is being compiled with this compiler.
            Then C# compiler would strip that attribute from the compiled project X dll.
            </summary>
        </member>
        <member name="T:GenerationAttributes.LambdaInterfaceAttribute">
             <summary>
             Generates a Lambda implementation of the marked interface.
             </summary>
            
             <remarks>
             <para>A Lambda implementation is a class where each function in the interface is converted to a delegate.</para>
            
             <para>Thus an interface like this:</para>
             <code><![CDATA[
             public interface IExampleInterface {
               int add(int a, int b);
               int negate(int a);
             }
             ]]></code>
            
             <para>Would be converted to:</para>
             <code><![CDATA[
             public record LambdaIExampleInterface(
               LambdaIExampleInterface._add add_,
               LambdaIExampleInterface._negate negate_
             ) : IExampleInterface {
               public delegate int _add(int a, int b);
               public int add(int a, int b) => add_(a, b);
             
               public delegate int _negate(int a);
               public int negate(int a) => negate_(a);
             }
             ]]></code>
             </remarks>
        </member>
    </members>
</doc>
